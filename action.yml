inputs:
  package:
    description: 'Name of the package'
    required: true
  sourcepkg:
    description: 'File of the source package'
    required: true
outputs:
  binarypkg:
    description: 'Name of the binary package output'
    value: ${{steps.checkoutput.outputs.binarypkg}}

runs:
  using: "composite"
  steps: 
    - id: checkoutput
      name: Inspect check outputs
      shell: bash
      run: |
        SOURCEPKG="${{ inputs.sourcepkg }}"      
        BINEXT=$(echo $RUNNER_OS | sed 's/Windows/zip/' | sed 's/macOS/tgz/')
        BINARYPKG="${SOURCEPKG%tar.gz}${BINEXT}"
        if [ -f "${BINARYPKG}" ]; then
          echo "Found binary package: $BINARYPKG"
          echo ::set-output name=binarypkg::$BINARYPKG
        else
          echo "No binary package $BINARYPKG found. Skipping deployment."
        fi
        find . -regex '.*\.R*out' | while read f; do echo "::group::$f"; echo " ===== $f ====="; tail -n1000 $f; echo "::endgroup::"; done
        find . -regex '.*\.fail' | while read f; do echo "::group::$f"; echo " ===== $f ====="; tail -n1000 $f; echo "::endgroup::"; done
